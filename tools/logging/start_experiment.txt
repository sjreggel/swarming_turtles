-----------------------
running the experiment
-----------------------

Using Keyboard for navigation: 
# Keyboard control
# > rosrun teleop_twist_keyboard teleop_twist_keyboard.py cmd_vel:=/robot_0/cmd_vel
# Start Experiment
# > rosservice call /start_all
# Barking on
# > rosservice call /shepherd/set_shepherding_status "target_status: true"


Using PS3 (Now included in the experiment launchfile)
# > sixad --start (when not already autostarted)
# > roslaunch swarming_turtles_shepherd shepherd_teleop_joy.launch 
# > rosrun swarming_turtles_shepherd shepherd_joy_control.py
- Hold Left1 to move the shepherd with the left thumb control
- START-button starts the robots (smach)
- X-button enables barking

publish food location
# > rosrun swarming_turtles_stage food_location_publisher.py

Start experiment
***** ALL PREVIOUS Command are now included in the LAUNCH files *******
> roslaunch swarming_turtles_stage swarm_sim-x-robots.launch 


Log experiment data (now from logging topic)
> rosbag record /logging -O logfile.bag

Monitor fooddrop count during experiment
> rosrun swarming_turtles_smach food_counter.py

After Experiment:
convert logfile to txt file
> rostopic echo /logging > logfile.txt
> rosbag play -r 100 logfile.bag

Parse and Analyze the data
> python parse.py /logfilelocation/logfile.txt
This will parse and analysis the inputfile, and will output  
/logfilelocation/logfile-out.txt containing the parsed data
/logfilelocation/logfile-out.log containing the analysis results


# Log experiment data (OBSOLETE)
# > rqt_console
# in rqt_console EXCLUDE all messages with severity DEBUG, ERR, WARN, FATAL
# in rqt_console EXCLUDE all nodes (per robot) that includes SwarmCollvoid
# clear the console before starting the experiment and make sure the logging is RUNNING
# after the experiment SAVE the logs to a file: e.g. Experiment_x.csv



